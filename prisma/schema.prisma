generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_DIRECT")
}

model User {
  id                      String                    @id @unique
  email                   String                    @unique
  password                String
  nama                    String
  role                    String
  status                  String
  Apoteker                Apoteker[]
  Pengawas                Pengawas[]
  RiwayatChangesKunjungan RiwayatChangesKunjungan[]
  Session                 Session[]
}

model Session {
  id      String   @id @default(uuid())
  id_user String
  token   String   @unique
  expires DateTime
  User    User     @relation(fields: [id_user], references: [id])
}

model Pasien {
  id            String      @id @unique
  nama_pasien   String
  alamat_ktp    String
  nama_ibu      String
  tempat_lahir  String
  tanggal_lahir DateTime    @db.Date
  nik           String
  id_apotek     String
  status        String
  tgl_nonaktif  DateTime?   @db.Date
  Kunjungan     Kunjungan[]
  Apotek        Apotek      @relation(fields: [id_apotek], references: [id], map: "Pasien_apotekId_fkey")
}

model Apoteker {
  id            String      @id @unique
  id_user       String
  nama_apoteker String
  sipa          String
  stra          String
  id_apotek     String
  Apotek        Apotek      @relation(fields: [id_apotek], references: [id])
  User          User        @relation(fields: [id_user], references: [id])
  Kunjungan     Kunjungan[]
  Pelaporan     Pelaporan[]
}

model Pengawas {
  id            String @id @unique
  id_user       String
  nama_pengawas String
  nip           Int
  User          User   @relation(fields: [id_user], references: [id])
}

model Apotek {
  id          String      @id @unique
  nama_apotek String
  alamat      String
  Apoteker    Apoteker[]
  Kunjungan   Kunjungan[]
  Pasien      Pasien[]
  Pelaporan   Pelaporan[]
}

model Pelaporan {
  id_laporan         String   @id @unique
  id_apotek          String
  id_apoteker        String
  jml_kunjungan      Int
  kunjungan_berisiko Int
  Apotek             Apotek   @relation(fields: [id_apotek], references: [id])
  Apoteker           Apoteker @relation(fields: [id_apoteker], references: [id])
}

model Kunjungan {
  id                      String                    @id @unique
  id_pasien               String
  id_apotek               String
  id_apoteker             String
  tgl_kunjungan           DateTime                  @db.Date
  tgl_resep               DateTime                  @db.Date
  nama_dokter             String
  alamat_faskes           String
  file_penyerahan         String
  Apotek                  Apotek                    @relation(fields: [id_apotek], references: [id])
  Apoteker                Apoteker                  @relation(fields: [id_apoteker], references: [id])
  Pasien                  Pasien                    @relation(fields: [id_pasien], references: [id])
  RiwayatChangesKunjungan RiwayatChangesKunjungan[]
}

model RiwayatChangesKunjungan {
  id              String    @id @unique
  id_kunjungan    String
  id_user         String
  tgl_perubahan   DateTime
  tgl_kunjungan   DateTime  @db.Date
  tgl_resep       DateTime  @db.Date
  nama_dokter     String
  alamat_faskes   String
  file_penyerahan String
  status          String
  Kunjungan       Kunjungan @relation(fields: [id_kunjungan], references: [id])
  User            User      @relation(fields: [id_user], references: [id])
}
